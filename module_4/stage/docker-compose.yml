version: '3.8'
services:
  #docker compose --env-file=.env.docker up -d 
  
  php:
    build:
      context: .
      dockerfile: dockerfiles/php.Dockerfile
    container_name: php
    restart: unless-stopped
    tty: true 
    environment:
      SERVICE_NAME: php
    working_dir: /var/www
    ports:
      - "${PHP_PORT}:8000"
    volumes:
      - ${WWW_ROOT_FOLDER}:/var/www
    networks:
      - app-network

  #MariaDB (MySql) Service
  db:
    image: yobasystems/alpine-mariadb
    container_name: mariadb
    restart: unless-stopped
    tty: true
    ports:
      - "${MARIADB_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      SERVICE_NAME: mysql
    volumes:
      - ${MYSQL_SAVE_FOLDER}:/var/lib/mysql
    networks:
      - app-network

  #Nginx Service
  webserver:
    build:
      context: .
      dockerfile: dockerfiles/nginx.Dockerfile
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "${NGINX_PORT_HTTP}:80"
      - "${NGINX_PORT_HTTPS}:443"
    volumes:
      - ${WWW_ROOT_FOLDER}:/var/www
    networks:
      - app-network

  #phpmyadmin
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "${PMA_PORT}:80"
    environment:
      - PMA_HOST=db
      - PMA_PORT=${MARIADB_PORT}
    networks:
      - app-network

  #node
  node:
    image: node
    container_name: node
    restart: unless-stopped
    tty: true
    working_dir: /src/  
    volumes:
      - ${WWW_ROOT_FOLDER}:/src/
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    restart: unless-stopped
    logging:
      driver: 'none'
    ports:
      - ${MAILHOG_PORT_SMTP}:1025
      - ${MAILHOG_PORT_WEBUI}:8025
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
